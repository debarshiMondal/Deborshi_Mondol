HTML_REPORT() {
  Report=$1
  : > "$HTMLLog"

  # ---------- presentation colors (UI only) ----------
  _hdr_bg="#2e7d32"; _run_strip="#e8f5e9"; _status_bg="#e8f5e9"
  [ "$Report" = "FAILED" ] && { _hdr_bg="#c62828"; _run_strip="#fff2b6"; _status_bg="#fff4cc"; }

  # ---------- values for Run Details chips ----------
  _RUN_IST="$(TZ=Asia/Kolkata date +'%d.%b.%Y %H:%M IST')"
  _API="${SetAPI:-N/A}"
  _BRANCH="$(git rev-parse --abbrev-ref HEAD 2>/dev/null || echo N/A)"
  _REPO="$(git config --get remote.origin.url 2>/dev/null || echo N/A)"
  _REQID="${REQUEST_ID:-${DEPLOYMENT_ID:-${DEPLOY_ID:-N/A}}}"

  # ---------- links ----------
  OPEN_LOGS_URL="https://cdnsfdc.cadence.com/SFDC_GIT_LOG/${SFDC_ORG}.GIT_${gitlast}-${gitlatest}.${DATE}"
  ORIG_PMD_URL="https://cdnsfdc.cadence.com/PMDOUTPUT/${SFDC_ORG}"
  FORCE_DEPLOY_URL="https://cdnsfdc.cadence.com/SFDC_GIT_LOG/${SFDC_ORG}.GIT_${gitlast}-${gitlatest}.${DATE}/$(basename ${HTMLFDLog:-$HTMLLog}).${DATE}"

  # ---------- tiny escaper ----------
  _esc(){ sed -e 's/&/\&amp;/g' -e 's/</\&lt;/g' -e 's/>/\&gt;/g'; }

  # ---------- HTML top ----------
  cat >>"$HTMLLog" <<'HTML_TOP'
<!DOCTYPE html><html><head><meta charset="utf-8"></head>
<body style="margin:0;padding:0;background:#f6f8fa;">
<table role="presentation" cellpadding="0" cellspacing="0" border="0" width="100%" style="background:#f6f8fa;"><tr><td align="center">
HTML_TOP

  # ---------- Header (slim) ----------
  cat >>"$HTMLLog" <<EOF
  <table role="presentation" cellpadding="0" cellspacing="0" border="0" width="980" style="max-width:980px;margin:14px auto;">
    <tr>
      <td style="background:${_hdr_bg};padding:12px 14px;color:#ffffff;font:bold 18px Arial,Helvetica,sans-serif;">
        ${SFDC_ORG} Deployment $([ "$Report" = "SUCCEEDED" ] && echo "Success" || echo "Failure") Report
      </td>
    </tr>
  </table>
EOF

  # ---------- Main card ----------
  cat >>"$HTMLLog" <<'CARD_TOP'
  <table role="presentation" cellpadding="0" cellspacing="0" border="0" width="980" style="max-width:980px;background:#ffffff;border:1px solid #e6e6e6;">
    <tr><td style="padding:12px 14px;">
CARD_TOP

  # ---------- Run Details (single strip; centered chips) ----------
  cat >>"$HTMLLog" <<EOF
  <table role="presentation" cellpadding="0" cellspacing="0" border="0" width="100%"
         style="background:${_run_strip};border-radius:10px;mso-border-alt:none;">
    <tr><td style="padding:6px 10px;font:800 13px Arial;color:#1a365d;">Run Details</td></tr>
    <tr><td style="padding:0 8px 6px 8px;">
      <table role="presentation" width="100%" cellpadding="0" cellspacing="0" border="0"><tr>
EOF

  _chip(){ # $1=label $2=value
    cat >>"$HTMLLog" <<EOF
        <td width="20%" style="padding:4px;">
          <table role="presentation" cellpadding="0" cellspacing="0" border="0" width="100%"
                 bgcolor="#f2f4f7" style="background:#f2f4f7;border:1px solid #e3e3e3;">
            <tr><td align="center" valign="middle" height="40" style="height:40px;padding:6px 8px;">
              <div style="font:10px Arial;color:#666;line-height:12px;">$1</div>
              <div style="font:bold 13px Arial;text-decoration:underline;word-wrap:break-word;word-break:break-word;white-space:normal;max-width:100%;">$2</div>
            </td></tr>
          </table>
        </td>
EOF
  }
  _chip "RUN (IST)"   "$(_esc <<<"$_RUN_IST")"
  _chip "API"         "$(_esc <<<"$_API")"
  _chip "BRANCH"      "$(_esc <<<"$_BRANCH")"
  _chip "REPO"        "$(_esc <<<"$_REPO")"
  _chip "REQUEST ID"  "$(_esc <<<"$_REQID")"

  cat >>"$HTMLLog" <<'EOF'
      </tr></table>
    </td></tr>
  </table>
EOF

  # ---------- Quick Links (4 tiles, width 220, Outlook VML) ----------
  _tile(){ # $1=label $2=href $3=bg
    cat >>"$HTMLLog" <<EOF
    <td width="25%" style="padding:4px;">
      <!--[if mso]>
        <v:roundrect xmlns:v="urn:schemas-microsoft-com:vml" href="$2"
          style="height:36px;v-text-anchor:middle;width:220px;" arcsize="12%" stroke="f" fillcolor="$3">
          <w:anchorlock/>
          <center style="color:#ffffff;font-family:Arial,sans-serif;font-size:12px;font-weight:bold;text-decoration:underline;">$1</center>
        </v:roundrect>
      <![endif]-->
      <!--[if !mso]><!-- -->
        <a href="$2" style="display:block;background:$3;line-height:36px;height:36px;text-align:center;color:#ffffff;font:bold 12px Arial;text-decoration:underline;">$1</a>
      <!--<![endif]-->
    </td>
EOF
  }
  echo '  <table role="presentation" cellpadding="0" cellspacing="0" border="0" width="100%" style="margin:6px 0 8px 0;"><tr>' >>"$HTMLLog"
  _tile "Open Logs"               "$OPEN_LOGS_URL"  "#2f80ed"
  _tile "Combined Original PMD"   "$ORIG_PMD_URL"   "#27ae60"
  _tile "Combined Current PMD"    "#"               "#6c63ff"
  _tile "ForceDeploy"             "$FORCE_DEPLOY_URL" "#b23aee"
  echo '  </tr></table>' >>"$HTMLLog"

  # ---------- Status Summary (consistent sizes, real counts) ----------
  cat >>"$HTMLLog" <<EOF
  <table role="presentation" cellpadding="0" cellspacing="0" border="0" width="100%">
    <tr><td style="padding:6px 4px 4px 4px;font:800 13px Arial;color:#1a365d;">STATUS SUMMARY</td></tr>
  </table>
  <table role="presentation" cellpadding="0" cellspacing="0" border="0" width="100%">
    <tr>
      <td width="33%" valign="top" style="padding:4px;">
        <table role="presentation" cellpadding="0" cellspacing="0" border="0" width="100%" height="92"
               style="background:${_status_bg};border-radius:8px;">
          <tr><td style="padding:8px;" valign="top">
            <div style="font:10px Arial;color:#666;">DEPLOYMENT</div>
            <div style="font:bold 14px Arial;color:#111;">$([ "$Report" = "SUCCEEDED" ] && echo "Succeeded" || echo "Failed")</div>
            <div style="font:12px Arial;color:#111;">Passed: ${COMP_PASS:-N/A} &nbsp; • &nbsp; Failed: ${COMP_FAIL:-N/A}</div>
          </td></tr>
        </table>
      </td>

      <td width="33%" valign="top" style="padding:4px;">
        <table role="presentation" cellpadding="0" cellspacing="0" border="0" width="100%" height="92"
               style="background:#e7f1ff;border-radius:8px;">
          <tr><td style="padding:8px;" valign="top">
            <div style="font:10px Arial;color:#666;">PMD — CURRENT CHANGESET</div>
            <div style="font:bold 13px Arial;color:#111;">Classes: ${CLASS_COUNT:-N/A} &nbsp; • &nbsp; Triggers: ${TRIGGER_COUNT:-N/A}</div>
            <div style="font:12px Arial;color:#111;">High (Classes): ${PMD_HIGH_CLS:-N/A} &nbsp; • &nbsp; High (Triggers): ${PMD_HIGH_TRG:-N/A}</div>
          </td></tr>
        </table>
      </td>

      <td width="33%" valign="top" style="padding:4px;">
        <table role="presentation" cellpadding="0" cellspacing="0" border="0" width="100%" height="92"
               style="background:#f3f4f7;border-radius:8px;">
          <tr><td style="padding:8px;" valign="top">
            <div style="font:10px Arial;color:#666;">DEPLOYMENT TIME</div>
            <div style="font:bold 14px Arial;color:#111;">${TOTAL_DURATION:-N/A}</div>
            <div style="font:12px Arial;color:#111;">Start: ${START_TIME_IST:-N/A} &nbsp; • &nbsp; End: ${END_TIME_IST:-N/A}</div>
          </td></tr>
        </table>
      </td>
    </tr>
  </table>
EOF

  # ---------- PMD REVIEW ----------
  echo '<table role="presentation" cellpadding="0" cellspacing="0" border="0" width="100%"><tr><td style="padding:10px 4px 6px 4px;font:800 13px Arial;color:#1a365d;">PMD REVIEW</td></tr></table>' >>"$HTMLLog"

  if [ -f /tmp/CodeAnalysisReport.txt ]; then
    echo '<div style="font:bold 12px Arial;color:#c62828;margin:0 4px 8px;">No PMD Report – No Class/Trigger in Changeset</div>' >>"$HTMLLog"
  else
    # ----- Classes table -----
    echo '<table role="presentation" cellpadding="8" cellspacing="0" border="0" width="100%" style="border-collapse:separate;border-spacing:0 4px;">' >>"$HTMLLog"
    echo '<tr style="background:#eaf2ff;"><th align="left"  style="font:11px Arial;color:#274690;padding:8px;">CLASS NAME</th><th align="right" style="font:11px Arial;color:#274690;padding:8px;">ORIGINAL (HIGH)</th><th align="right" style="font:11px Arial;color:#274690;padding:8px;">CURRENT (HIGH)</th><th align="right" style="font:11px Arial;color:#274690;padding:8px;">Δ HIGH</th></tr>' >>"$HTMLLog"

    for classeName in `ls changeSetDeploy/force-app/main/default/classes/*.cls 2>/dev/null`
    do
      base="$(basename "$classeName" .cls)"
      classeHtml="${base}.cls_currpmd.html"
      currTxt="${base}.cls_currpmd.txt"
      orgTxt="${base}.cls_orgpmd.txt"

      pmd_html="/data/public/pmd_rule/$SFDC_ORG/$classeHtml"
      OriginalPmd=$( [ -f "$pmd_html" ] && grep "Original PMD Warnings Total" "$pmd_html" | cut -d ":" -f 2 || echo "0")
      Currentpmd=$(  [ -f "$pmd_html" ] && grep "Current PMD Warnings Total"  "$pmd_html" | cut -d ":" -f 2 || echo "0")

      pattern="ApexUnitTestShouldNotUseSeeAllDataTrue:\|UnusedLocalVariable:\|ClassNamingConventions:\|FieldDeclarationsShouldBeAtStart:\|FieldNamingConventions:\|FormalParameterNamingConventions:\|LocalVariableNamingConventions:\|MethodNamingConventions:\|PropertyNamingConventions:\|ExcessiveClassLength:\|ExcessiveParameterList:\|ApexDoc:\|ApexCSRF:\|AvoidDirectAccessTriggerMap:\|AvoidHardcodingId:\|AvoidNonExistentAnnotations:\|EmptyCatchBlock:\|EmptyIfStmt:\|EmptyStatementBlock:\|EmptyTryOrFinallyBlock:\|EmptyWhileStmt:\|InaccessibleAuraEnabledGetter:\|MethodWithSameNameAsEnclosingClass:\|OverrideBothEqualsAndHashcode:\|TestMethodsMustBeInTestClasses:\|AvoidDmlStatementsInLoops:\|AvoidSoqlInLoops:\|AvoidSoslInLoops:\|OperationWithLimitsInLoop:\|ApexBadCrypto:\|ApexDangerousMethods:\|ApexInsecureEndpoint:\|ApexOpenRedirect:\|ApexSharingViolations:\|ApexSOQLInjection:\|ApexSuggestUsingNamedCred:"
      CurrseverityCnt=$( [ -f "PMDReport/currentpmdoutput/changeSetDeploy/force-app/main/default/classes/$currTxt" ] && grep -o $pattern "PMDReport/currentpmdoutput/changeSetDeploy/force-app/main/default/classes/$currTxt" | wc -l || echo 0 )
      OrgseverityCnt=$(  [ -f "PMDReport/orgpmdoutput/src/classes/$orgTxt" ] && grep -o $pattern "PMDReport/orgpmdoutput/src/classes/$orgTxt" | wc -l || echo 0 )
      delta=$(( CurrseverityCnt - OrgseverityCnt ))
      sign=""
      [ $delta -gt 0 ] && sign="+$delta" || sign="$delta"

      link="https://cdnsfdc.cadence.com/pmd_rule/$SFDC_ORG/$classeHtml"
      display="$base.cls"
      if [ "${CurrseverityCnt:-0}" -gt "${OrgseverityCnt:-0}" ]; then
        echo "<tr style=\"background:#ffffff;border:1px solid #e6eefc;\"><td style=\"word-wrap:break-word;word-break:break-word;white-space:normal;\"><a href=\"$link\" style=\"text-decoration:underline;color:#c62828;font-weight:bold;\">$display</a></td><td align=\"right\" style=\"color:#c62828;\">${OriginalPmd}-($OrgseverityCnt)</td><td align=\"right\" style=\"color:#c62828;\"><b>${Currentpmd}-($CurrseverityCnt)</b></td><td align=\"right\" style=\"color:#c62828;\">$sign</td></tr>" >>"$HTMLLog"
      else
        echo "<tr style=\"background:#ffffff;border:1px solid #e6eefc;\"><td style=\"word-wrap:break-word;word-break:break-word;white-space:normal;\"><a href=\"$link\" style=\"text-decoration:underline;color:#0b5ed7;\">$display</a></td><td align=\"right\" style=\"color:#0b5ed7;\">${OriginalPmd}-($OrgseverityCnt)</td><td align=\"right\" style=\"color:#0b5ed7;\">${Currentpmd}-($CurrseverityCnt)</td><td align=\"right\" style=\"color:#0b5ed7;\">$sign</td></tr>" >>"$HTMLLog"
      fi
    done
    echo "</table>" >>"$HTMLLog"

    # ----- Triggers table (same high-severity logic + Δ High) -----
    echo '<table role="presentation" cellpadding="8" cellspacing="0" border="0" width="100%" style="border-collapse:separate;border-spacing:0 4px;margin-top:6px;"><tr style="background:#eaf2ff;"><th align="left" style="font:11px Arial;color:#274690;padding:8px;">TRIGGER NAME</th><th align="right" style="font:11px Arial;color:#274690;padding:8px;">ORIGINAL (HIGH)</th><th align="right" style="font:11px Arial;color:#274690;padding:8px;">CURRENT (HIGH)</th><th align="right" style="font:11px Arial;color:#274690;padding:8px;">Δ HIGH</th></tr>' >>"$HTMLLog"
    for triggerName in `ls changeSetDeploy/force-app/main/default/triggers/*.trigger 2>/dev/null`
    do
      tbase="$(basename "$triggerName" .trigger)"
      trigHtml="${tbase}.trigger_currpmd.html"
      currTxt="${tbase}.trigger_currpmd.txt"
      orgTxt="${tbase}.trigger_orgpmd.txt"

      t_html="/data/public/pmd_rule/$SFDC_ORG/$trigHtml"
      OriginalPmd=$( [ -f "$t_html" ] && grep "Original PMD Warnings Total" "$t_html" | cut -d ":" -f 2 || echo "0")
      Currentpmd=$(  [ -f "$t_html" ] && grep "Current PMD Warnings Total"  "$t_html" | cut -d ":" -f 2 || echo "0")

      pattern="ApexUnitTestShouldNotUseSeeAllDataTrue:\|UnusedLocalVariable:\|ClassNamingConventions:\|FieldDeclarationsShouldBeAtStart:\|FieldNamingConventions:\|FormalParameterNamingConventions:\|LocalVariableNamingConventions:\|MethodNamingConventions:\|PropertyNamingConventions:\|ExcessiveClassLength:\|ExcessiveParameterList:\|ApexDoc:\|ApexCSRF:\|AvoidDirectAccessTriggerMap:\|AvoidHardcodingId:\|AvoidNonExistentAnnotations:\|EmptyCatchBlock:\|EmptyIfStmt:\|EmptyStatementBlock:\|EmptyTryOrFinallyBlock:\|EmptyWhileStmt:\|InaccessibleAuraEnabledGetter:\|MethodWithSameNameAsEnclosingClass:\|OverrideBothEqualsAndHashcode:\|TestMethodsMustBeInTestClasses:\|AvoidDmlStatementsInLoops:\|AvoidSoqlInLoops:\|AvoidSoslInLoops:\|OperationWithLimitsInLoop:\|ApexBadCrypto:\|ApexDangerousMethods:\|ApexInsecureEndpoint:\|ApexOpenRedirect:\|ApexSharingViolations:\|ApexSOQLInjection:\|ApexSuggestUsingNamedCred:"
      CurrseverityCnt=$( [ -f "PMDReport/currentpmdoutput/changeSetDeploy/force-app/main/default/triggers/$currTxt" ] && grep -o $pattern "PMDReport/currentpmdoutput/changeSetDeploy/force-app/main/default/triggers/$currTxt" | wc -l || echo 0 )
      OrgseverityCnt=$(  [ -f "PMDReport/orgpmdoutput/src/triggers/$orgTxt" ] && grep -o $pattern "PMDReport/orgpmdoutput/src/triggers/$orgTxt" | wc -l || echo 0 )
      delta=$(( CurrseverityCnt - OrgseverityCnt ))
      sign=""
      [ $delta -gt 0 ] && sign="+$delta" || sign="$delta"

      link="https://cdnsfdc.cadence.com/pmd_rule/$SFDC_ORG/$trigHtml"
      display="$tbase.trigger"
      if [ "${CurrseverityCnt:-0}" -gt "${OrgseverityCnt:-0}" ]; then
        echo "<tr style=\"background:#ffffff;border:1px solid #e6eefc;\"><td style=\"word-wrap:break-word;word-break:break-word;white-space:normal;\"><a href=\"$link\" style=\"text-decoration:underline;color:#c62828;font-weight:bold;\">$display</a></td><td align=\"right\" style=\"color:#c62828;\">${OriginalPmd}-($OrgseverityCnt)</td><td align=\"right\" style=\"color:#c62828;\"><b>${Currentpmd}-($CurrseverityCnt)</b></td><td align=\"right\" style=\"color:#c62828;\">$sign</td></tr>" >>"$HTMLLog"
      else
        echo "<tr style=\"background:#ffffff;border:1px solid #e6eefc;\"><td style=\"word-wrap:break-word;word-break:break-word;white-space:normal;\"><a href=\"$link\" style=\"text-decoration:underline;color:#0b5ed7;\">$display</a></td><td align=\"right\" style=\"color:#0b5ed7;\">${OriginalPmd}-($OrgseverityCnt)</td><td align=\"right\" style=\"color:#0b5ed7;\">${Currentpmd}-($CurrseverityCnt)</td><td align=\"right\" style=\"color:#0b5ed7;\">$sign</td></tr>" >>"$HTMLLog"
      fi
    done
    echo "</table>" >>"$HTMLLog"
  fi

  # ---------- Changeset / Failures (unchanged logic; two-tone rows) ----------
  SAVEIFS=$IFS; IFS=$(echo -en "\n\b")
  if [ "$Report" = "SUCCEEDED" ]; then
    find changeSetDeploy/force-app/main/default -type f \
      | egrep -v "customSettings|staticResourceFolders.txt" \
      | sed 's|^changeSetDeploy/force-app/main/default|src|' | sort -u > "${DEPLOYEDFILE}"
    changesetFile=$(find changeSetDeploy/force-app/main/default -type f | egrep -v "customSettings|staticResourceFolders.txt" | wc -l)
    echo "<table role=\"presentation\" width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\" style=\"margin-top:8px;\"><tr><td style=\"font:bold 13px Arial;color:#1a365d;padding:4px;\">Changeset file/s ...[${changesetFile}]</td></tr></table>" >>"$HTMLLog"
    NUM=1
    while read -r FILE; do
      [ "${FILE}" = "src/labels/CustomLabels.labels-meta.xml" ] && FILE=src/env/${SFDC_ORG}/customLabel/CustomLabels.labels-meta.xml
      if echo "$FILE" | grep -q "^customSettings"; then FILE=$(echo "${FILE}" | sed -e 's/^customSettings\///g'); fi
      [[ "$FILE" =~ "src/remoteSiteSettings/" ]] && FILE=$(echo "${FILE}" | sed -e "s/^src/src\/env\/${SFDC_ORG}/g")
      [[ "$FILE" =~ "src/customMetadata/" ]]     && FILE=$(echo "${FILE}" | sed -e "s/^src/src\/env\/${SFDC_ORG}/g")
      echo "<table role=\"presentation\" width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\" style=\"margin-top:6px;\">
              <tr><td style=\"background:#e8f5e9;padding:6px 8px;border:1px solid #d8eeda;\"><pre style=\"margin:0;white-space:pre-wrap;word-wrap:break-word;word-break:break-word;\">[$((NUM++))] ${FILE}</pre></td></tr>
              <tr><td style=\"background:#e0e0e0;padding:6px 8px;border-left:1px solid #d1d1d1;border-right:1px solid #d1d1d1;border-bottom:1px solid #d1d1d1;\"><pre style=\"margin:0;white-space:pre-wrap;word-wrap:break-word;word-break:break-word;\">Last author... $(git log -1 ${FILE} | sed -e 's/$/\ |/g' | xargs | sed -e 's/| |/|\ Comment:/g')</pre></td></tr>
            </table>" >>"$HTMLLog"
    done < "${DEPLOYEDFILE}"
  else
    echo '<table role="presentation" width="100%" cellpadding="0" cellspacing="0" border="0" style="margin-top:8px;"><tr><td style="font:bold 13px Arial;color:#1a365d;padding:4px;">All Component Failures:</td></tr></table>' >>"$HTMLLog"
    i=1
    for failure in $(jq -c '.result.details.componentFailures[]' "$LOG.filtered"); do
      fileName=$(echo "$failure" | jq -r '.fileName')
      fileDisp=$(echo "$fileName" | sed 's|^changeSetDeploy/force-app/main/default/||')
      errorMsg=$(echo "$failure" | jq -r '.problem' | tr '\n' ' ' | tr '\r' ' ' | sed -e 's/&/\&amp;/g; s/</\&lt;/g; s/>/\&gt;/g')
      echo "<table role=\"presentation\" width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\" style=\"margin-top:6px;\"><tr><td style=\"background:#fff4cc;padding:6px 8px;border:1px solid #f0e1a6;\"><pre style=\"margin:0;white-space:pre-wrap;word-wrap:break-word;word-break:break-word;\">$i. $fileDisp -- Error: $errorMsg</pre></td></tr>" >>"$HTMLLog"
      gitFile=$(find src -type f -iname "$(basename "$fileName")" | head -n 1)
      if [ -z "$gitFile" ]; then ext=$(echo "$fileName" | sed 's/.*\.//'); if ! echo "cls page trigger component" | grep -qw "$ext"; then metaCandidate="$(basename "$fileName")-meta.xml"; fallbackFile=$(find src -type f -iname "$metaCandidate" | head -n 1); [ -n "$fallbackFile" ] && gitFile="$fallbackFile"; fi; fi
      if [ -n "$gitFile" ]; then
        LastAuthor=$(git log -1 "$gitFile" 2>/dev/null | sed -e 's/$/\ |/g' | xargs | sed -e 's/| |/|\ Comment:/g')
        echo "<tr><td style=\"background:#e0e0e0;padding:6px 8px;border-left:1px solid #d1d1d1;border-right:1px solid #d1d1d1;border-bottom:1px solid #d1d1d1;\"><pre style=\"margin:0;white-space:pre-wrap;word-wrap:break-word;word-break:break-word;\">GIT log >>> $gitFile
$LastAuthor</pre></td></tr></table>" >>"$HTMLLog"
      else
        echo "<tr><td style=\"background:#e0e0e0;padding:6px 8px;border-left:1px solid #d1d1d1;border-right:1px solid #d1d1d1;border-bottom:1px solid #d1d1d1;\"><pre style=\"margin:0;white-space:pre-wrap;word-wrap:break-word;word-break:break-word;\">No Git log available for $fileDisp</pre></td></tr></table>" >>"$HTMLLog"
      fi
      i=$((i+1))
    done
  fi
  IFS=$SAVEIFS

  # ---------- Footer (slim) ----------
  cat >>"$HTMLLog" <<'CARD_END'
    </td></tr></table>
    <table role="presentation" cellpadding="0" cellspacing="0" border="0" width="980" style="max-width:980px;margin:10px auto 22px;background:#111111;">
      <tr><td style="padding:8px 10px;text-align:center;color:#ffffff;font:bold 12px Arial;">End of Report</td></tr>
    </table>
</td></tr></table>
</body></html>
CARD_END

  # ---------- email (unchanged) ----------
  EMAIL=${FROM} mutt -e 'set content_type=text/html' \
    -s "---${SFDC_ORG}--- SF-CLI ChangeSet Deploy ${Report} [`TZ=IST date +%d.%b.%Y` IST - git ${gitlast}-${gitlatest} ]" "${mutt_MAIL_LIST}" < "$HTMLLog"
}

CodeAnalyser() {
  # --- 0) Run PMD (same as today) -------------------------------------------
  rm -f /tmp/CodeAnalysisReport.txt
  if [ -d changeSetDeploy/force-app/main/default/classes -o -d changeSetDeploy/force-app/main/default/triggers ]; then
    bash build/script/currpmd.sh
    bash build/script/createpmdhtml.sh "$SFDC_ORG"
  else
    echo "'classes/' or 'triggers/' not exist. Codebase will not appear." >> /tmp/CodeAnalysisReport.txt
    return 0
  fi

  # --- 1) Count High violations ---------------------------------------------
  local PAT_FILE="build/property/pmd_high_patterns.txt"
  local pattern
  pattern="$(grep -Ehv '^\s*($|#)' "$PAT_FILE" 2>/dev/null | tr -d '\r' | paste -sd'|' -)"
  [ -n "$pattern" ] || pattern="(High|Priority\s*:\s*High|Severity\s*:\s*High)"

  local CLASS_DIR="PMDReport/currentpmdoutput/changeSetDeploy/force-app/main/default/classes"
  local TRIG_DIR="PMDReport/currentpmdoutput/changeSetDeploy/force-app/main/default/triggers"

  _sum_matches() {
    local dir="$1"
    [ -d "$dir" ] || { echo 0; return; }
    find "$dir" -maxdepth 1 -type f -name '*.txt' -print0 2>/dev/null \
      | xargs -0 -r grep -Eh "$pattern" 2>/dev/null | wc -l | xargs
  }

  local PMD_HIGH_CLS PMD_HIGH_TRG CLASS_COUNT TRIGGER_COUNT
  PMD_HIGH_CLS=$(_sum_matches "$CLASS_DIR")
  PMD_HIGH_TRG=$(_sum_matches "$TRIG_DIR")
  CLASS_COUNT=$(ls changeSetDeploy/force-app/main/default/classes/*.cls 2>/dev/null | wc -l | xargs)
  TRIGGER_COUNT=$(ls changeSetDeploy/force-app/main/default/triggers/*.trigger 2>/dev/null | wc -l | xargs)

  local TOTAL_HIGH=$(( PMD_HIGH_CLS + PMD_HIGH_TRG ))

  # --- 2) If NO Regression → continue deployment ----------------------------
  if [ "${TOTAL_HIGH:-0}" -le 0 ]; then
    echo "PMD: No High regression detected (classes=${CLASS_COUNT}, triggers=${TRIGGER_COUNT})."
    return 0
  fi

  # --- 3) Build an HTML report (failure colors) + send email + stop ----------
  # 3a) Read failure palette from ui_colors.jsonc (no change to HTML_REPORT)
  local UI_COLORS_JSONC="${property:+${property}/ui_colors.jsonc}"
  UI_COLORS_JSONC="${UI_COLORS_JSONC:-ui_colors.jsonc}"
  local UI_COLORS_JSON_STRICT="/tmp/ui_colors.$$.$RANDOM.json"

  command -v jq >/dev/null 2>&1 || { echo "jq missing"; Unlock; }
  [ -f "$UI_COLORS_JSONC" ] || { echo "ui_colors.jsonc missing"; Unlock; }

  # strip comments -> strict JSON
  sed -E ':a; s@/\*[^*]*\*+([^/*][^*]*\*+)*/@@g; ta' "$UI_COLORS_JSONC" \
    | sed -E 's@\r$@@' \
    | sed -E 's@//[[:space:]]*.*$@@' \
    | sed '/^[[:space:]]*$/d' > "$UI_COLORS_JSON_STRICT"

  # helpers to read with defaults
  _getc(){ jq -r "$1 // empty" "$UI_COLORS_JSON_STRICT"; }
  _gets(){ v=$(_getc "$1"); [ -n "$v" ] && printf '%s' "$v" || printf '%s' "$2"; }

  # Failure palette
  local HDR_BG HDR_TX PLATE_BG PLATE_BD CHIP_BG CHIP_TX CHIP_BD RUN_HDR_BG RUN_HDR_TX
  HDR_BG=$(_gets '.header.failure_bg' '#a94442')
  HDR_TX=$(_gets '.header.text' '#ffffff')
  PLATE_BG=$(_gets '.plate.background' '#eef8ef')
  PLATE_BD=$(_gets '.plate.border' '#b5d2b8')
  CHIP_BG=$(_gets '.chips.failure_bg' '#def5de')
  CHIP_TX=$(_gets '.chips.failure_text' '#1f2937')
  CHIP_BD=$(_gets '.chips.border_failure' "$(_gets '.chips.border' '#b5d2b8')")
  RUN_HDR_BG=$(_gets '.run_details.title_bg_failure' "$(_gets '.run_details.strip_failure_bg' '#a94442')")
  RUN_HDR_TX=$(_gets '.run_details.title_text_failure' "$(_gets '.run_details.title_text' '#ffffff')")

  local STAT_DEP_BG STAT_DEP_L STAT_DEP_V STAT_PMD STAT_TIME STATUS_RADIUS
  STAT_DEP_BG=$(_gets '.status_summary.deployment_failure_bg' '#ffecec')
  STAT_DEP_L=$(_gets '.status_summary.label_text' '#374151')
  STAT_DEP_V=$(_gets '.status_summary.value_text' '#111827')
  STAT_PMD=$(_gets '.status_summary.pmd_bg' '#e9f5ff')
  STAT_TIME=$(_gets '.status_summary.time_bg' '#eef2ff')
  STATUS_RADIUS=$(_gets '.status_summary.corner_radius' '4px')

  local FOOT_BG FOOT_TX FOOT_COPY
  FOOT_BG=$(_gets '.footer.bg' '#f5f5f5')
  FOOT_TX=$(_gets '.footer.text' '#374151')
  FOOT_COPY=$(_gets '.strings.footer.failure' '{ORG} • Deployment Failure Report — generated automatically.')

  # 3b) Runtime info for chips
  local _RUN_IST _API _BRANCH _REPO _REQID _DEPUSER
  _RUN_IST="$(TZ=Asia/Kolkata date +'%d.%b.%Y %H:%M IST')"
  _API="${SetAPI:-N/A}"
  _BRANCH="$(git rev-parse --abbrev-ref HEAD 2>/dev/null || echo N/A)"
  _REPO="$(git config --get remote.origin.url 2>/dev/null || echo N/A)"
  _REQID="No Deployment"
  _DEPUSER="${FROM:-N/A}"

  # 3c) Quick links
  local OPEN_LOGS_URL ORIG_PMD_URL PMD_PATTERN_URL FORCE_DEPLOY_URL
  OPEN_LOGS_URL="https://cdnsfdc.cadence.com/SFDC_GIT_LOG/${SFDC_ORG}.GIT_${gitlast}-${gitlatest}.${DATE}"
  ORIG_PMD_URL="https://cdnsfdc.cadence.com/PMDOUTPUT/${SFDC_ORG}"
  [ -s "$PAT_FILE" ] && {
    mkdir -p "/data/public/pmd_patterns/${SFDC_ORG}/"
    cp -u "$PAT_FILE" "/data/public/pmd_patterns/${SFDC_ORG}/pmd_high_patterns.txt" 2>/dev/null
    PMD_PATTERN_URL="https://cdnsfdc.cadence.com/pmd_patterns/${SFDC_ORG}/pmd_high_patterns.txt"
  }
  FORCE_DEPLOY_URL="$OPEN_LOGS_URL"

  # 3d) Build PMD Review rows (classes + triggers) with deltas
  local rows=() max_oh=0 max_ch=0

  _add_rows_for_dir() {
    local kind="$1" src_glob="$2" curr_dir="$3" org_dir="$4" ext="$5"
    local f base pmd_html OP CP OH CH delta author display link
    for f in $src_glob; do
      [ -e "$f" ] || continue
      base="$(basename "$f" ".$ext")"
      pmd_html="/data/public/pmd_rule/$SFDC_ORG/${base}.$ext"_currpmd_orgpm.html
      OP=$(awk '/Original PMD Warnings/{f=1; next} f && /class="stat/{print; exit}' "$pmd_html" 2>/dev/null | sed -n 's/.*>\([0-9][0-9]*\)<.*/\1/p'); OP=${OP:-0}
      CP=$(awk '/Current PMD Warnings/{f=1; next} f && /class="stat/{print; exit}' "$pmd_html" 2>/dev/null | sed -n 's/.*>\([0-9][0-9]*\)<.*/\1/p'); CP=${CP:-0}
      OH=$(grep -Eh "$pattern" "$org_dir/${base}.*" 2>/dev/null | wc -l | xargs); OH=${OH:-0}
      CH=$(grep -Eh "$pattern" "$curr_dir/${base}.*" 2>/dev/null | wc -l | xargs); CH=${CH:-0}
      delta=$(( CH - OH ))
      author="$(git log -1 --format='%an' "src/${kind}/${base}.*" 2>/dev/null | head -n1)"; [ -n "$author" ] || author="N/A"
      display="${base}.${ext}"
      link="https://cdnsfdc.cadence.com/pmd_rule/$SFDC_ORG/${base}.$ext"_currpmd_orgpm.html
      rows+=("$display|$link|$author|$OP|$OH|$CP|$CH|$delta")
      [ "$OH" -gt "$max_oh" ] && max_oh="$OH"
      [ "$CH" -gt "$max_ch" ] && max_ch="$CH"
    done
  }

  _add_rows_for_dir "classes" "changeSetDeploy/force-app/main/default/classes/*.cls"  \
                    "PMDReport/currentpmdoutput/changeSetDeploy/force-app/main/default/classes" \
                    "PMDReport/orgpmdoutput/src/classes" "cls"

  _add_rows_for_dir "triggers" "changeSetDeploy/force-app/main/default/triggers/*.trigger" \
                    "PMDReport/currentpmdoutput/changeSetDeploy/force-app/main/default/triggers" \
                    "PMDReport/orgpmdoutput/src/triggers" "trigger"

  # 3e) Render a compact HTML (same look as your failure report)
  local PMD_HTML="/tmp/${SFDC_ORG}.PMDRegression.${DATE}.html"
  : > "$PMD_HTML"

  cat >>"$PMD_HTML" <<HTML
<!DOCTYPE html><html><head><meta charset="utf-8"><meta http-equiv="x-ua-compatible" content="ie=edge">
<meta name="viewport" content="width=device-width, initial-scale=1">
<title>${SFDC_ORG} PMD Regression</title>
</head>
<body style="margin:0;padding:0;background:#ffffff;font:12px Arial,Helvetica,sans-serif;color:#111827;">
<table role="presentation" cellpadding="0" cellspacing="0" border="0" width="100%">
  <tr><td style="background:${HDR_BG};color:${HDR_TX};padding:8px 10px;border-bottom:1px solid ${PLATE_BD};text-align:center;font-weight:700;">
    ---${SFDC_ORG}--- PMD Regression Detected: Deployment Canceled
  </td></tr>
</table>

<!-- Run Details -->
<table role="presentation" cellpadding="0" cellspacing="0" border="0" width="100%" style="margin-top:8px;border:1px solid ${PLATE_BD};">
  <tr><td style="background:${RUN_HDR_BG};color:${RUN_HDR_TX};padding:6px 8px;text-align:center;font-weight:700;">Run Details</td></tr>
  <tr><td style="background:${PLATE_BG};padding:8px;">
    <table role="presentation" cellpadding="0" cellspacing="0" border="0" width="100%">
      <tr>
        <td style="width:33%;padding:0 8px 8px 0;">
          <div style="background:${CHIP_BG};border:1px solid ${CHIP_BD};padding:6px;">
            <div style="font-weight:700;text-transform:uppercase;color:${CHIP_TX};">REPO</div>
            <div style="color:${CHIP_TX};word-break:break-all;">${_REPO}</div>
          </div>
        </td>
        <td style="width:33%;padding:0 8px 8px 0;">
          <div style="background:${CHIP_BG};border:1px solid ${CHIP_BD};padding:6px;">
            <div style="font-weight:700;text-transform:uppercase;color:${CHIP_TX};">BRANCH</div>
            <div style="color:${CHIP_TX};">${_BRANCH}</div>
          </div>
        </td>
        <td style="width:33%;padding:0 0 8px 0;">
          <div style="background:${CHIP_BG};border:1px solid ${CHIP_BD};padding:6px;">
            <div style="font-weight:700;text-transform:uppercase;color:${CHIP_TX};">REQUEST ID</div>
            <div style="color:${CHIP_TX};">${_REQID}</div>
          </div>
        </td>
      </tr>
      <tr>
        <td style="width:33%;padding:0 8px 0 0;">
          <div style="background:${CHIP_BG};border:1px solid ${CHIP_BD};padding:6px;">
            <div style="font-weight:700;text-transform:uppercase;color:${CHIP_TX};">RUN (IST)</div>
            <div style="color:${CHIP_TX};">${_RUN_IST}</div>
          </div>
        </td>
        <td style="width:33%;padding:0 8px 0 0;">
          <div style="background:${CHIP_BG};border:1px solid ${CHIP_BD};padding:6px;">
            <div style="font-weight:700;text-transform:uppercase;color:${CHIP_TX};">ORG NAME + API</div>
            <div style="color:${CHIP_TX};">${SFDC_ORG} • ${_API}</div>
          </div>
        </td>
        <td style="width:33%;padding:0;">
          <div style="background:${CHIP_BG};border:1px solid ${CHIP_BD};padding:6px;">
            <div style="font-weight:700;text-transform:uppercase;color:${CHIP_TX};">DEPLOY USER</div>
            <div style="color:${CHIP_TX};">${_DEPUSER}</div>
          </div>
        </td>
      </tr>
    </table>

    <!-- Quick links -->
    <div style="margin-top:8px;">
      <a href="${OPEN_LOGS_URL}" style="display:inline-block;margin-right:8px;padding:6px 10px;border:1px solid ${CHIP_BD};background:#ffffff;text-decoration:none;color:#0f172a;">Open Logs</a>
      <a href="${ORIG_PMD_URL}" style="display:inline-block;margin-right:8px;padding:6px 10px;border:1px solid ${CHIP_BD};background:#ffffff;text-decoration:none;color:#0f172a;">Original PMD Report</a>
      <a href="${PMD_PATTERN_URL:-$ORIG_PMD_URL}" style="display:inline-block;margin-right:8px;padding:6px 10px;border:1px solid ${CHIP_BD};background:#ffffff;text-decoration:none;color:#0f172a;">PMD Critical Warning Pattern</a>
      <a href="${FORCE_DEPLOY_URL}" style="display:inline-block;padding:6px 10px;border:1px solid ${CHIP_BD};background:#ffffff;text-decoration:none;color:#0f172a;">ForceDeploy</a>
    </div>
  </td></tr>
</table>

<!-- Status Summary -->
<table role="presentation" cellpadding="0" cellspacing="0" border="0" width="100%" style="margin-top:8px;border:1px solid ${PLATE_BD};">
  <tr><td style="background:${RUN_HDR_BG};color:${RUN_HDR_TX};padding:6px 8px;text-align:center;font-weight:700;">Status Summary</td></tr>
  <tr><td style="background:${PLATE_BG};padding:8px;">
    <table role="presentation" cellpadding="0" cellspacing="0" border="0" width="100%">
      <tr>
        <td style="width:33%;padding:2px;">
          <div style="background:${STAT_DEP_BG};border:1px solid ${CHIP_BD};border-radius:${STATUS_RADIUS};padding:6px;">
            <div style="color:${STAT_DEP_L};">DEPLOYMENT</div>
            <div style="font-weight:700;color:${STAT_DEP_V};">Canceled</div>
            <div style="color:${STAT_DEP_V};">Passed: 0</div>
          </div>
        </td>
        <td style="width:33%;padding:2px;">
          <div style="background:${STAT_PMD};border:1px solid ${CHIP_BD};border-radius:${STATUS_RADIUS};padding:6px;">
            <div style="color:${STAT_DEP_L};">PMD — CHANGESET</div>
            <div style="font-weight:700;color:${STAT_DEP_V};">Classes: ${CLASS_COUNT} • Triggers: ${TRIGGER_COUNT}</div>
            <div style="color:${STAT_DEP_V};">High (Classes): ${PMD_HIGH_CLS} • High (Triggers): ${PMD_HIGH_TRG}</div>
          </div>
        </td>
        <td style="width:33%;padding:2px;">
          <div style="background:${STAT_TIME};border:1px solid ${CHIP_BD};border-radius:${STATUS_RADIUS};padding:6px;">
            <div style="color:${STAT_DEP_L};">DURATION</div>
            <div style="font-weight:700;color:${STAT_DEP_V};">0</div>
            <div style="color:${STAT_DEP_V};">Start: 0 • End: 0</div>
          </div>
        </td>
      </tr>
    </table>
  </td></tr>
</table>

<!-- PMD Review -->
<table role="presentation" cellpadding="0" cellspacing="0" border="0" width="100%" style="margin-top:10px;border:1px solid ${PLATE_BD};">
  <tr><td style="background:${RUN_HDR_BG};color:${RUN_HDR_TX};padding:6px 8px;text-align:center;font-weight:700;">PMD Review</td></tr>
  <tr><td style="background:${PLATE_BG};padding:6px;">
    <div style="margin-bottom:6px;">
      <strong style="color:#b91c1c;">Red = got worse (Δ High > 0)</strong> &nbsp;&nbsp;
      <strong style="color:#7c2d12;">Light red = improvement (Δ High < 0)</strong> &nbsp;&nbsp;
      <strong style="color:#6b7280;">White/Grey = no change (Δ High = 0)</strong>
    </div>
    <table role="presentation" cellpadding="0" cellspacing="0" border="0" width="100%" style="border:1px solid ${PLATE_BD};">
      <thead>
        <tr style="background:#e5e7eb;">
          <th align="left"  style="padding:6px 8px;">CLASS / TRIGGER NAME</th>
          <th align="right" style="padding:6px 8px;">ORIGINAL (HIGH)</th>
          <th align="right" style="padding:6px 8px;">CURRENT (HIGH)</th>
          <th align="right" style="padding:6px 8px;">Δ HIGH</th>
          <th align="left"  style="padding:6px 8px;">AUTHOR</th>
        </tr>
      </thead>
      <tbody>
HTML

  # emit rows with zebra + delta coloring
  local i=0 display link author OP OH CP CH delta bg
  for row in "${rows[@]}"; do
    IFS='|' read -r display link author OP OH CP CH delta <<<"$row"
    if   [ "$delta" -gt 0 ]; then bg="#ffefef"
    elif [ "$delta" -lt 0 ]; then bg="#fff5f5"
    else                         bg="$([ $((i%2)) -eq 0 ] && echo '#ffffff' || echo '#f7f7f7')"
    fi
    cat >>"$PMD_HTML" <<ROW
        <tr style="background:${bg};">
          <td style="padding:6px 8px;"><a href="$link" style="color:#0f172a;">$display</a></td>
          <td align="right" style="padding:6px 8px;">${OP} <span style="opacity:.7;">(${OH})</span></td>
          <td align="right" style="padding:6px 8px;">${CP} <span style="opacity:.7;">(${CH})</span></td>
          <td align="right" style="padding:6px 8px;font-weight:700;">${delta}</td>
          <td style="padding:6px 8px;">${author}</td>
        </tr>
ROW
    i=$((i+1))
  done

  cat >>"$PMD_HTML" <<HTML
      </tbody>
    </table>
  </td></tr>
</table>

<!-- Footer -->
<table role="presentation" cellpadding="0" cellspacing="0" border="0" width="100%" style="margin:8px 0;border:1px solid ${PLATE_BD};">
  <tr><td align="center" style="background:${FOOT_BG};color:${FOOT_TX};padding:6px 8px;font-weight:700;">
    $(echo "$FOOT_COPY" | sed "s/{ORG}/${SFDC_ORG}/")
  </td></tr>
</table>

</body></html>
HTML

  # 3f) Send email + stop everything
  EMAIL=${FROM} mutt -e 'set content_type=text/html' \
    -s "---${SFDC_ORG}--- PMD Regression Detected: Deployment Canceled [`TZ=Asia/Kolkata date +%d.%b.%Y` IST - git ${gitlast}-${gitlatest} ]" \
    "${mutt_MAIL_LIST}" < "$PMD_HTML"

  echo "[PMD] Regression detected: classes=${PMD_HIGH_CLS}, triggers=${PMD_HIGH_TRG}. Deployment canceled." | tee -a "$LOG"

  # Clean temp color file
  rm -f "$UI_COLORS_JSON_STRICT" 2>/dev/null

  # Hard stop the pipeline
  Unlock   # <- removes LOCK and exits
}
